//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.13 at 11:58:26 AM CET 
//


package org.spec.research.open.xtrace.adapters.dynatrace.model.generated;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.w3c.dom.Element;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="source" type="{}sourceType"/>
 *         &lt;element name="comparesource" type="{}sourceType" minOccurs="0"/>
 *         &lt;element name="reportheader" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="reportdetails" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;any processContents='lax' maxOccurs="unbounded" minOccurs="0"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="data">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;choice maxOccurs="unbounded" minOccurs="0">
 *                   &lt;element ref="{}admdashlet"/>
 *                   &lt;element ref="{}agentbreakdowndashlet"/>
 *                   &lt;element ref="{}agentsoverviewdashlet"/>
 *                   &lt;element ref="{}apibreakdowndashlet"/>
 *                   &lt;element ref="{}baselinechart"/>
 *                   &lt;element ref="{}browsererrors"/>
 *                   &lt;element ref="{}browserhotspotsdashlet"/>
 *                   &lt;element ref="{}browsernetworkdashlet"/>
 *                   &lt;element ref="{}browserpurepathsdashlet"/>
 *                   &lt;element ref="{}bthistoricalcomparisondashlet"/>
 *                   &lt;element ref="{}businesstransactionsdashlet"/>
 *                   &lt;element ref="{}chartdashlet"/>
 *                   &lt;element ref="{}componentsdashlet"/>
 *                   &lt;element ref="{}databasedashlet"/>
 *                   &lt;element ref="{}databasestatementsdashlet"/>
 *                   &lt;element ref="{}dualaxischartdashlet"/>
 *                   &lt;element ref="{}dynamicmeasurematrixdashlet"/>
 *                   &lt;element ref="{}enduserpurepathsdashlet"/>
 *                   &lt;element ref="{}entrypointsdashlet"/>
 *                   &lt;element ref="{}errordetectiondashlet"/>
 *                   &lt;element ref="{}exceptionsdashlet"/>
 *                   &lt;element ref="{}functionalhealthdashlet"/>
 *                   &lt;element ref="{}groupingdashlet"/>
 *                   &lt;element ref="{}guicontrolsdashlet"/>
 *                   &lt;element ref="{}hostdashlet"/>
 *                   &lt;element ref="{}incidentchartdashlet"/>
 *                   &lt;element ref="{}incidentsoverviewdashlet"/>
 *                   &lt;element ref="{}infrastructureoverview"/>
 *                   &lt;element ref="{}javascripterrordashlet"/>
 *                   &lt;element ref="{}layerbreakdowndashlet"/>
 *                   &lt;element ref="{}loggingdashlet"/>
 *                   &lt;element ref="{}memoryallocationsdashlet"/>
 *                   &lt;element ref="{}messagingdashlet"/>
 *                   &lt;element ref="{}methodhotspotsdashlet"/>
 *                   &lt;element ref="{}methodsdashlet"/>
 *                   &lt;element ref="{}namingservicesdashlet"/>
 *                   &lt;element ref="{}pageactions"/>
 *                   &lt;element ref="{}pageactionshealthdashlet"/>
 *                   &lt;element ref="{}performancereport"/>
 *                   &lt;element ref="{}processdashlet"/>
 *                   &lt;element ref="{}purepathsdashlet"/>
 *                   &lt;element ref="{}remotingdashlet"/>
 *                   &lt;element ref="{}runtimesuspensionsdashlet"/>
 *                   &lt;element ref="{}samplingcontent"/>
 *                   &lt;element ref="{}selectivememory"/>
 *                   &lt;element ref="{}sequencediagramdashlet"/>
 *                   &lt;element ref="{}sessionbrowserdashlet"/>
 *                   &lt;element ref="{}statusoverviewdashlet"/>
 *                   &lt;element ref="{}taggedwebrequestsdashlet"/>
 *                   &lt;element ref="{}tasksmonitorsdashlet"/>
 *                   &lt;element ref="{}testautomation"/>
 *                   &lt;element ref="{}textdashlet"/>
 *                   &lt;element ref="{}totalmemory"/>
 *                   &lt;element ref="{}visitsdashlet"/>
 *                   &lt;element ref="{}webpagedashlet"/>
 *                   &lt;element ref="{}webrequestsdashlet"/>
 *                   &lt;element ref="{}webserverdashlet"/>
 *                   &lt;element ref="{}webservicesdashlet"/>
 *                   &lt;element ref="{}worldmapdashlet"/>
 *                 &lt;/choice>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="version" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="reportdate" use="required" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *       &lt;attribute name="description" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "source",
    "comparesource",
    "reportheader",
    "data"
})
@XmlRootElement(name = "dashboardreport")
public class Dashboardreport {

    @XmlElement(required = true)
    protected SourceType source;
    protected SourceType comparesource;
    protected Dashboardreport.Reportheader reportheader;
    @XmlElement(required = true)
    protected Dashboardreport.Data data;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "version", required = true)
    protected String version;
    @XmlAttribute(name = "reportdate", required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar reportdate;
    @XmlAttribute(name = "description")
    protected String description;

    /**
     * Gets the value of the source property.
     * 
     * @return
     *     possible object is
     *     {@link SourceType }
     *     
     */
    public SourceType getSource() {
        return source;
    }

    /**
     * Sets the value of the source property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceType }
     *     
     */
    public void setSource(SourceType value) {
        this.source = value;
    }

    /**
     * Gets the value of the comparesource property.
     * 
     * @return
     *     possible object is
     *     {@link SourceType }
     *     
     */
    public SourceType getComparesource() {
        return comparesource;
    }

    /**
     * Sets the value of the comparesource property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceType }
     *     
     */
    public void setComparesource(SourceType value) {
        this.comparesource = value;
    }

    /**
     * Gets the value of the reportheader property.
     * 
     * @return
     *     possible object is
     *     {@link Dashboardreport.Reportheader }
     *     
     */
    public Dashboardreport.Reportheader getReportheader() {
        return reportheader;
    }

    /**
     * Sets the value of the reportheader property.
     * 
     * @param value
     *     allowed object is
     *     {@link Dashboardreport.Reportheader }
     *     
     */
    public void setReportheader(Dashboardreport.Reportheader value) {
        this.reportheader = value;
    }

    /**
     * Gets the value of the data property.
     * 
     * @return
     *     possible object is
     *     {@link Dashboardreport.Data }
     *     
     */
    public Dashboardreport.Data getData() {
        return data;
    }

    /**
     * Sets the value of the data property.
     * 
     * @param value
     *     allowed object is
     *     {@link Dashboardreport.Data }
     *     
     */
    public void setData(Dashboardreport.Data value) {
        this.data = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the reportdate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getReportdate() {
        return reportdate;
    }

    /**
     * Sets the value of the reportdate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setReportdate(XMLGregorianCalendar value) {
        this.reportdate = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice maxOccurs="unbounded" minOccurs="0">
     *         &lt;element ref="{}admdashlet"/>
     *         &lt;element ref="{}agentbreakdowndashlet"/>
     *         &lt;element ref="{}agentsoverviewdashlet"/>
     *         &lt;element ref="{}apibreakdowndashlet"/>
     *         &lt;element ref="{}baselinechart"/>
     *         &lt;element ref="{}browsererrors"/>
     *         &lt;element ref="{}browserhotspotsdashlet"/>
     *         &lt;element ref="{}browsernetworkdashlet"/>
     *         &lt;element ref="{}browserpurepathsdashlet"/>
     *         &lt;element ref="{}bthistoricalcomparisondashlet"/>
     *         &lt;element ref="{}businesstransactionsdashlet"/>
     *         &lt;element ref="{}chartdashlet"/>
     *         &lt;element ref="{}componentsdashlet"/>
     *         &lt;element ref="{}databasedashlet"/>
     *         &lt;element ref="{}databasestatementsdashlet"/>
     *         &lt;element ref="{}dualaxischartdashlet"/>
     *         &lt;element ref="{}dynamicmeasurematrixdashlet"/>
     *         &lt;element ref="{}enduserpurepathsdashlet"/>
     *         &lt;element ref="{}entrypointsdashlet"/>
     *         &lt;element ref="{}errordetectiondashlet"/>
     *         &lt;element ref="{}exceptionsdashlet"/>
     *         &lt;element ref="{}functionalhealthdashlet"/>
     *         &lt;element ref="{}groupingdashlet"/>
     *         &lt;element ref="{}guicontrolsdashlet"/>
     *         &lt;element ref="{}hostdashlet"/>
     *         &lt;element ref="{}incidentchartdashlet"/>
     *         &lt;element ref="{}incidentsoverviewdashlet"/>
     *         &lt;element ref="{}infrastructureoverview"/>
     *         &lt;element ref="{}javascripterrordashlet"/>
     *         &lt;element ref="{}layerbreakdowndashlet"/>
     *         &lt;element ref="{}loggingdashlet"/>
     *         &lt;element ref="{}memoryallocationsdashlet"/>
     *         &lt;element ref="{}messagingdashlet"/>
     *         &lt;element ref="{}methodhotspotsdashlet"/>
     *         &lt;element ref="{}methodsdashlet"/>
     *         &lt;element ref="{}namingservicesdashlet"/>
     *         &lt;element ref="{}pageactions"/>
     *         &lt;element ref="{}pageactionshealthdashlet"/>
     *         &lt;element ref="{}performancereport"/>
     *         &lt;element ref="{}processdashlet"/>
     *         &lt;element ref="{}purepathsdashlet"/>
     *         &lt;element ref="{}remotingdashlet"/>
     *         &lt;element ref="{}runtimesuspensionsdashlet"/>
     *         &lt;element ref="{}samplingcontent"/>
     *         &lt;element ref="{}selectivememory"/>
     *         &lt;element ref="{}sequencediagramdashlet"/>
     *         &lt;element ref="{}sessionbrowserdashlet"/>
     *         &lt;element ref="{}statusoverviewdashlet"/>
     *         &lt;element ref="{}taggedwebrequestsdashlet"/>
     *         &lt;element ref="{}tasksmonitorsdashlet"/>
     *         &lt;element ref="{}testautomation"/>
     *         &lt;element ref="{}textdashlet"/>
     *         &lt;element ref="{}totalmemory"/>
     *         &lt;element ref="{}visitsdashlet"/>
     *         &lt;element ref="{}webpagedashlet"/>
     *         &lt;element ref="{}webrequestsdashlet"/>
     *         &lt;element ref="{}webserverdashlet"/>
     *         &lt;element ref="{}webservicesdashlet"/>
     *         &lt;element ref="{}worldmapdashlet"/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "admdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet"
    })
    public static class Data {

        @XmlElements({
            @XmlElement(name = "admdashlet", type = Admdashlet.class),
            @XmlElement(name = "agentbreakdowndashlet", type = Agentbreakdowndashlet.class),
            @XmlElement(name = "agentsoverviewdashlet", type = Agentsoverviewdashlet.class),
            @XmlElement(name = "apibreakdowndashlet", type = Apibreakdowndashlet.class),
            @XmlElement(name = "baselinechart", type = Baselinechart.class),
            @XmlElement(name = "browsererrors", type = Browsererrors.class),
            @XmlElement(name = "browserhotspotsdashlet", type = Browserhotspotsdashlet.class),
            @XmlElement(name = "browsernetworkdashlet", type = Browsernetworkdashlet.class),
            @XmlElement(name = "browserpurepathsdashlet", type = Browserpurepathsdashlet.class),
            @XmlElement(name = "bthistoricalcomparisondashlet", type = Bthistoricalcomparisondashlet.class),
            @XmlElement(name = "businesstransactionsdashlet", type = Businesstransactionsdashlet.class),
            @XmlElement(name = "chartdashlet", type = Chartdashlet.class),
            @XmlElement(name = "componentsdashlet", type = Componentsdashlet.class),
            @XmlElement(name = "databasedashlet", type = Databasedashlet.class),
            @XmlElement(name = "databasestatementsdashlet", type = Databasestatementsdashlet.class),
            @XmlElement(name = "dualaxischartdashlet", type = Dualaxischartdashlet.class),
            @XmlElement(name = "dynamicmeasurematrixdashlet", type = Dynamicmeasurematrixdashlet.class),
            @XmlElement(name = "enduserpurepathsdashlet", type = Enduserpurepathsdashlet.class),
            @XmlElement(name = "entrypointsdashlet", type = Entrypointsdashlet.class),
            @XmlElement(name = "errordetectiondashlet", type = Errordetectiondashlet.class),
            @XmlElement(name = "exceptionsdashlet", type = Exceptionsdashlet.class),
            @XmlElement(name = "functionalhealthdashlet", type = Functionalhealthdashlet.class),
            @XmlElement(name = "groupingdashlet", type = Groupingdashlet.class),
            @XmlElement(name = "guicontrolsdashlet", type = Guicontrolsdashlet.class),
            @XmlElement(name = "hostdashlet", type = Hostdashlet.class),
            @XmlElement(name = "incidentchartdashlet", type = Incidentchartdashlet.class),
            @XmlElement(name = "incidentsoverviewdashlet", type = Incidentsoverviewdashlet.class),
            @XmlElement(name = "infrastructureoverview", type = Infrastructureoverview.class),
            @XmlElement(name = "javascripterrordashlet", type = Javascripterrordashlet.class),
            @XmlElement(name = "layerbreakdowndashlet", type = Layerbreakdowndashlet.class),
            @XmlElement(name = "loggingdashlet", type = Loggingdashlet.class),
            @XmlElement(name = "memoryallocationsdashlet", type = Memoryallocationsdashlet.class),
            @XmlElement(name = "messagingdashlet", type = Messagingdashlet.class),
            @XmlElement(name = "methodhotspotsdashlet", type = Methodhotspotsdashlet.class),
            @XmlElement(name = "methodsdashlet", type = Methodsdashlet.class),
            @XmlElement(name = "namingservicesdashlet", type = Namingservicesdashlet.class),
            @XmlElement(name = "pageactions", type = Pageactions.class),
            @XmlElement(name = "pageactionshealthdashlet", type = Pageactionshealthdashlet.class),
            @XmlElement(name = "performancereport", type = Performancereport.class),
            @XmlElement(name = "processdashlet", type = Processdashlet.class),
            @XmlElement(name = "purepathsdashlet", type = Purepathsdashlet.class),
            @XmlElement(name = "remotingdashlet", type = Remotingdashlet.class),
            @XmlElement(name = "runtimesuspensionsdashlet", type = Runtimesuspensionsdashlet.class),
            @XmlElement(name = "samplingcontent", type = Samplingcontent.class),
            @XmlElement(name = "selectivememory", type = Selectivememory.class),
            @XmlElement(name = "sequencediagramdashlet", type = Sequencediagramdashlet.class),
            @XmlElement(name = "sessionbrowserdashlet", type = Sessionbrowserdashlet.class),
            @XmlElement(name = "statusoverviewdashlet", type = Statusoverviewdashlet.class),
            @XmlElement(name = "taggedwebrequestsdashlet", type = Taggedwebrequestsdashlet.class),
            @XmlElement(name = "tasksmonitorsdashlet", type = Tasksmonitorsdashlet.class),
            @XmlElement(name = "testautomation", type = Testautomation.class),
            @XmlElement(name = "textdashlet", type = Textdashlet.class),
            @XmlElement(name = "totalmemory", type = Totalmemory.class),
            @XmlElement(name = "visitsdashlet", type = Visitsdashlet.class),
            @XmlElement(name = "webpagedashlet", type = Webpagedashlet.class),
            @XmlElement(name = "webrequestsdashlet", type = Webrequestsdashlet.class),
            @XmlElement(name = "webserverdashlet", type = Webserverdashlet.class),
            @XmlElement(name = "webservicesdashlet", type = Webservicesdashlet.class),
            @XmlElement(name = "worldmapdashlet", type = Worldmapdashlet.class)
        })
        protected List<Object> admdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet;

        /**
         * Gets the value of the admdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the admdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAdmdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Admdashlet }
         * {@link Agentbreakdowndashlet }
         * {@link Agentsoverviewdashlet }
         * {@link Apibreakdowndashlet }
         * {@link Baselinechart }
         * {@link Browsererrors }
         * {@link Browserhotspotsdashlet }
         * {@link Browsernetworkdashlet }
         * {@link Browserpurepathsdashlet }
         * {@link Bthistoricalcomparisondashlet }
         * {@link Businesstransactionsdashlet }
         * {@link Chartdashlet }
         * {@link Componentsdashlet }
         * {@link Databasedashlet }
         * {@link Databasestatementsdashlet }
         * {@link Dualaxischartdashlet }
         * {@link Dynamicmeasurematrixdashlet }
         * {@link Enduserpurepathsdashlet }
         * {@link Entrypointsdashlet }
         * {@link Errordetectiondashlet }
         * {@link Exceptionsdashlet }
         * {@link Functionalhealthdashlet }
         * {@link Groupingdashlet }
         * {@link Guicontrolsdashlet }
         * {@link Hostdashlet }
         * {@link Incidentchartdashlet }
         * {@link Incidentsoverviewdashlet }
         * {@link Infrastructureoverview }
         * {@link Javascripterrordashlet }
         * {@link Layerbreakdowndashlet }
         * {@link Loggingdashlet }
         * {@link Memoryallocationsdashlet }
         * {@link Messagingdashlet }
         * {@link Methodhotspotsdashlet }
         * {@link Methodsdashlet }
         * {@link Namingservicesdashlet }
         * {@link Pageactions }
         * {@link Pageactionshealthdashlet }
         * {@link Performancereport }
         * {@link Processdashlet }
         * {@link Purepathsdashlet }
         * {@link Remotingdashlet }
         * {@link Runtimesuspensionsdashlet }
         * {@link Samplingcontent }
         * {@link Selectivememory }
         * {@link Sequencediagramdashlet }
         * {@link Sessionbrowserdashlet }
         * {@link Statusoverviewdashlet }
         * {@link Taggedwebrequestsdashlet }
         * {@link Tasksmonitorsdashlet }
         * {@link Testautomation }
         * {@link Textdashlet }
         * {@link Totalmemory }
         * {@link Visitsdashlet }
         * {@link Webpagedashlet }
         * {@link Webrequestsdashlet }
         * {@link Webserverdashlet }
         * {@link Webservicesdashlet }
         * {@link Worldmapdashlet }
         * 
         * 
         */
        public List<Object> getAdmdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet() {
            if (admdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet == null) {
                admdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet = new ArrayList<Object>();
            }
            return this.admdashletOrAgentbreakdowndashletOrAgentsoverviewdashlet;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="reportdetails" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;any processContents='lax' maxOccurs="unbounded" minOccurs="0"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "reportdetails"
    })
    public static class Reportheader {

        protected Dashboardreport.Reportheader.Reportdetails reportdetails;

        /**
         * Gets the value of the reportdetails property.
         * 
         * @return
         *     possible object is
         *     {@link Dashboardreport.Reportheader.Reportdetails }
         *     
         */
        public Dashboardreport.Reportheader.Reportdetails getReportdetails() {
            return reportdetails;
        }

        /**
         * Sets the value of the reportdetails property.
         * 
         * @param value
         *     allowed object is
         *     {@link Dashboardreport.Reportheader.Reportdetails }
         *     
         */
        public void setReportdetails(Dashboardreport.Reportheader.Reportdetails value) {
            this.reportdetails = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;any processContents='lax' maxOccurs="unbounded" minOccurs="0"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "any"
        })
        public static class Reportdetails {

            @XmlAnyElement(lax = true)
            protected List<Object> any;

            /**
             * Gets the value of the any property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the any property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAny().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link Object }
             * {@link Element }
             * 
             * 
             */
            public List<Object> getAny() {
                if (any == null) {
                    any = new ArrayList<Object>();
                }
                return this.any;
            }

        }

    }

}
